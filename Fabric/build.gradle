plugins {
    id "java"
    id "maven-publish"

    id "com.github.johnrengelman.shadow"
    id "at.petra-k.PKSubprojPlugin"
    id "fabric-loom" version "1.0-SNAPSHOT"
}

// https://github.com/shedaniel/cloth-config/blob/v6/common/build.gradle
configurations {
    shade
    implementation.extendsFrom shade
}


loom {
    mixin.defaultRefmapName = "paucal.mixins.refmap.json"

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("Fabric/run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("Fabric/run")
        }
    }
}

repositories {
    mavenCentral()

    maven {
        name = "Sponge / Mixin"
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }

    // Cloth config
    maven { url "https://maven.shedaniel.me/" }
    // Mod menu
    maven { url "https://maven.terraformersmc.com/releases/" }

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraftVersion}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabricLoaderVersion}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabricVersion}"
    compileOnly project(":Common")

    modApi "me.shedaniel.cloth:cloth-config-fabric:${clothConfigVersion}"
    modApi "com.terraformersmc:modmenu:${modMenuVersion}"

    implementation "org.jetbrains:annotations:16.0.2"

    shade "blue.endless:jankson:$janksonVersion"
    compileOnly "blue.endless:jankson:$janksonVersion" // equivalent of minecraftLibrary on forge?
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
    srcDir "../Common/src/generated/resources"
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

pkSubproj {
    platform "fabric"

    curseforgeJar remapJar.archiveFile
    curseforgeDependencies([])

    modrinthJar remapJar.archiveFile
    modrinthDependencies([
            "cloth-config:${clothConfigVersion}+fabric"
    ])
}
jar.archiveClassifier = "slim"

shadowJar {
    archiveClassifier = "shadow"
    configurations = [project.configurations.shade]
    relocate "blue.endless.jankson", "at.petrak.relocated.jankson"
}

remapJar {
    dependsOn(shadowJar)
    inputFile.set(shadowJar.archiveFile)
    archiveClassifier = ""
}
