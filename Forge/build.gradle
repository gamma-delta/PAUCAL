buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven {
            url = "https://repo.spongepowered.org/repository/maven-public/"
            content { includeGroup "org.spongepowered" }
        }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

plugins {
    id "java"
    id "maven-publish"

    id "com.github.johnrengelman.shadow"
    id "at.petra-k.PKSubprojPlugin"
}
// these plugins don't like being in the decl block
apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

configurations {
    shade
    implementation.extendsFrom shade
}

minecraft {
    mappings channel: "official", version: minecraftVersion

    runs {
        client {
            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                create(modID) {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                create(modID) {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        // We need a dummy run for the ones below to inherit from
        data {}

        xplatDatagen {
            parent minecraft.runs.data

            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            args "--mod", modID, "--all", "--output", file("../Common/src/generated/resources/"), "--existing", file("../Common/src/main/resources/")
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            property "paucal.xplat_datagen", "true"
            mods {
                create(modID) {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        forgeDatagen {
            parent minecraft.runs.data

            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            args "--mod", modID, "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                create(modID) {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()

    maven {
        name = "Sponge / Mixin"
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than "net.minecraft", it is assumed
    // that the dep is a ForgeGradle "patcher" dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${minecraftVersion}-${forgeVersion}"
    compileOnly project(":Common")

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    shade "blue.endless:jankson:$janksonVersion"
    minecraftLibrary "blue.endless:jankson:$janksonVersion" // make it work in the IDE

    implementation "org.jetbrains:annotations:16.0.2"
}

mixin {
    add sourceSets.main, "paucal.mixins.refmap.json"
    config "paucal_xplat.mixins.json"
    config "paucal_forge.mixins.json"
}

sourcesJar {
    from project(":Common").sourceSets.main.allJava
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
    srcDir "../Common/src/generated/resources"
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("mods.toml") {
        expand "version": project.version
    }

    // Exclude datagenerator .cache directory
    exclude ".cache"
}

build {
    println "Forcing re-compile of Java to include refmap"
    tasks.withType(JavaCompile) {
        outputs.upToDateWhen { false }
    }
}

jar.archiveClassifier = "slim"

shadowJar {
    archiveClassifier = ""
    configurations = [project.configurations.shade]
    relocate "blue.endless.jankson", "at.petrak.relocated.jankson"
    finalizedBy "reobfShadowJar"
}

assemble.dependsOn shadowJar

reobf {
    shadowJar {}
}

pkSubproj {
    platform "forge"

    curseforgeJar shadowJar.archiveFile
    curseforgeDependencies[]

    modrinthJar shadowJar.archiveFile
    modrinthDependencies[]
}
